<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cooklang – Recipe Markup Language on Cooklang: recipe markup language</title><link>/</link><description>Recent content in Cooklang – Recipe Markup Language on Cooklang: recipe markup language</description><generator>Hugo</generator><language>en-ie</language><lastBuildDate>Thu, 04 Sep 2025 17:51:42 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>/docs/getting-started/</link><pubDate>Tue, 15 Feb 2022 19:30:08 +1000</pubDate><guid>/docs/getting-started/</guid><description>All you need to get started with Cooklang</description></item><item><title>Cooklang Specification</title><link>/docs/spec/</link><pubDate>Thu, 04 Sep 2025 14:59:22 +0000</pubDate><guid>/docs/spec/</guid><description>This is the specification and reference for writing a recipe in Cooklang.</description></item><item><title>For Developers</title><link>/docs/for-developers/</link><pubDate>Tue, 15 Feb 2022 19:30:08 +1000</pubDate><guid>/docs/for-developers/</guid><description>Links on projects helpful for developers.</description></item><item><title>Frequently Asked Questions</title><link>/app/faq/</link><pubDate>Thu, 20 May 2021 19:30:08 +1000</pubDate><guid>/app/faq/</guid><description>The questions we're pretty sure you want to know the answers to.</description></item><item><title>Frequently Asked Questions</title><link>/mobile/faq/</link><pubDate>Thu, 20 May 2021 19:30:08 +1000</pubDate><guid>/mobile/faq/</guid><description>The questions we're pretty sure you want to know the answers to.</description></item><item><title>Download CookCLI</title><link>/cli/download/</link><pubDate>Thu, 20 May 2021 19:30:08 +1000</pubDate><guid>/cli/download/</guid><description>Links and instructions to download CookCLI.</description></item><item><title>Syntax Highlighting</title><link>/docs/syntax-highlighting/</link><pubDate>Thu, 20 May 2021 19:27:37 +1000</pubDate><guid>/docs/syntax-highlighting/</guid><description>Instructions for installing syntax highlighting addons for some of the most popular markdown text editors.</description></item><item><title>Examples</title><link>/docs/examples/</link><pubDate>Thu, 20 May 2021 19:27:37 +1000</pubDate><guid>/docs/examples/</guid><description>An example recipe written in Cooklang.</description></item><item><title>Recipe</title><link>/cli/commands/recipe/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/recipe/</guid><description>&lt;p>The &lt;code>recipe&lt;/code> command parses and displays Cooklang recipe files. It's your primary tool for viewing recipes, validating syntax, and converting between formats.&lt;/p>
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook recipe &amp;amp;#34;Neapolitan Pizza.cook&amp;amp;#34;&lt;/code>&lt;/pre>
&lt;/div>&lt;p>File extension is optional, that works too:&lt;/p>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook recipe &amp;amp;#34;Neapolitan Pizza&amp;amp;#34;&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This displays the recipe in a human-readable format with ingredients, steps, and metadata clearly organized.&lt;/p>
&lt;h2 id="menu-files">Menu Files&lt;/h2>
&lt;p>CookCLI also supports &lt;code>.menu&lt;/code> files for meal planning. Menu files can reference multiple recipes and organize them by meals or days:&lt;/p></description></item><item><title>Shopping Lists</title><link>/docs/use-cases/shopping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/use-cases/shopping/</guid><description>&lt;p>One of the most practical applications of Cooklang is transforming meal planning into efficient shopping trips. Instead of manually writing lists or trying to remember what you need, Cooklang tools automatically generate comprehensive shopping lists from your planned meals.&lt;/p>
&lt;h3 id="from-recipes-to-shopping-cart">From Recipes to Shopping Cart&lt;/h3>
&lt;p>When you select recipes for the week, Cooklang understands every ingredient needed and combines them intelligently. If Monday's pasta and Thursday's pizza both need mozzarella, your shopping list shows the total amount needed, not separate entries.&lt;/p></description></item><item><title>Shopping List</title><link>/cli/commands/shopping-list/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/shopping-list/</guid><description>&lt;p>The &lt;code>shopping-list&lt;/code> command creates organized shopping lists from one or more recipes. It automatically combines ingredients, converts units (some day!), and groups items by store section.&lt;/p>
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook shopping-list &amp;amp;#34;Pasta.cook&amp;amp;#34; &amp;amp;#34;Salad.cook&amp;amp;#34;&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This creates a combined shopping list with all ingredients from both recipes.&lt;/p>
&lt;h2 id="creating-shopping-lists">Creating Shopping Lists&lt;/h2>
&lt;h3 id="single-recipe">Single Recipe&lt;/h3>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook shopping-list &amp;amp;#34;Breakfast/Easy Pancakes&amp;amp;#34; &amp;amp;#34;Neapolitan Pizza&amp;amp;#34;&lt;/code>&lt;/pre>
&lt;/div>&lt;p>Output:&lt;/p>


&lt;div class="code-toolbar">
 &lt;pre class="language-" data-language="">&lt;code class="language-">[dried herbs and spices]
salt 24.6 g
sea salt 1 pinch

[milk and dairy]
eggs 3

[oils and dressings]
oil
olive oil 1 drizzle

[other]
San Marzano tomato sauce 5 tbsp
basil leaves
mozzarella cheese 100 grams
semolina&lt;/code>&lt;/pre>
&lt;/div>&lt;h3 id="multiple-recipes">Multiple Recipes&lt;/h3>
&lt;p>Combine ingredients from several recipes:&lt;/p></description></item><item><title>Meal Planning</title><link>/docs/use-cases/meal-planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/use-cases/meal-planning/</guid><description>&lt;p>Meal planning is the cornerstone of efficient home cooking. It transforms the daily question of &amp;quot;what's for dinner?&amp;quot; from a source of stress into an organized system that saves time, money, and mental energy. Cooklang provides the structure to make meal planning both systematic and flexible.&lt;/p>
&lt;h3 id="beyond-random-recipes">Beyond Random Recipes&lt;/h3>
&lt;p>Instead of choosing meals day by day, meal planning views your week holistically. Monday's roast chicken becomes Tuesday's chicken salad and Wednesday's soup stock. This connected thinking reduces waste while maximizing flavor and efficiency.&lt;/p></description></item><item><title>Server</title><link>/cli/commands/server/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/server/</guid><description>&lt;p>The &lt;code>server&lt;/code> command starts a local web server that makes your recipe collection browsable from any device with a web browser. It's perfect for cooking from a tablet, sharing recipes with family, or browsing your collection comfortably.&lt;/p>
&lt;img width="1166" height="995" alt="Screenshot 2025-08-28 at 16 47 49" src="https://github.com/user-attachments/assets/73ec0a6d-f2dc-4fcc-b54b-5622e0532df3" />
&lt;img width="1175" height="935" alt="Screenshot 2025-08-28 at 16 47 56" src="https://github.com/user-attachments/assets/fdbfc722-cdec-401a-a9ac-6ff2bba4b7c5" />
&lt;img width="1276" height="866" alt="Screenshot 2025-08-28 at 16 49 20" src="https://github.com/user-attachments/assets/8e6c0ffa-0957-4769-9268-beae8efdea7a" />
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook server&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This starts a web server on &lt;code>http://localhost:9080&lt;/code> serving recipes from the current directory.&lt;/p></description></item><item><title>Pantry Management</title><link>/docs/use-cases/pantry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/use-cases/pantry/</guid><description>&lt;p>A well-managed pantry is the foundation of confident cooking. It's the difference between last-minute grocery runs and spontaneous delicious meals. Cooklang transforms pantry management from mental burden to systematic practice, ensuring you always know what you have, what you need, and what you can make.&lt;/p>
&lt;h3 id="beyond-storage">Beyond Storage&lt;/h3>
&lt;p>A pantry isn't just where food lives - it's the intersection of possibility and practicality. Every item represents potential meals, but also requires management: tracking quantities, monitoring expiration, and understanding usage patterns. The goal isn't maximum storage but optimal flow.&lt;/p></description></item><item><title>Search</title><link>/cli/commands/search/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/search/</guid><description>&lt;p>The &lt;code>search&lt;/code> command helps you find recipes quickly by searching through titles, ingredients, instructions, and metadata. It's perfect for answering &amp;quot;what can I cook with what I have?&amp;quot; or finding that recipe you remember but can't locate.&lt;/p>
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook search chicken&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This searches all recipes for the word &amp;quot;chicken&amp;quot; and returns matching recipes sorted by relevance.&lt;/p>
&lt;h2 id="search-basics">Search Basics&lt;/h2>
&lt;h3 id="single-term-search">Single Term Search&lt;/h3>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook search tomato&lt;/code>&lt;/pre>
&lt;/div>&lt;p>Output:&lt;/p>


&lt;div class="code-toolbar">
 &lt;pre class="language-" data-language="">&lt;code class="language-">Pasta with Tomato Sauce.cook
Tomato Soup.cook
Caprese Salad.cook
Pizza Margherita.cook&lt;/code>&lt;/pre>
&lt;/div>&lt;h3 id="multiple-terms">Multiple Terms&lt;/h3>
&lt;p>All terms must match (AND logic):&lt;/p></description></item><item><title>Acceptable Use Policy</title><link>/mobile/use_policy/</link><pubDate>Thu, 20 May 2021 19:30:08 +1000</pubDate><guid>/mobile/use_policy/</guid><description>Our privacy policy.</description></item><item><title>Mobile App Terms of Service</title><link>/mobile/terms/</link><pubDate>Thu, 20 May 2021 19:30:08 +1000</pubDate><guid>/mobile/terms/</guid><description>Read the fine print.</description></item><item><title>Privacy Policy</title><link>/mobile/privacy/</link><pubDate>Thu, 20 May 2021 19:30:08 +1000</pubDate><guid>/mobile/privacy/</guid><description>Our privacy policy.</description></item><item><title>Reports and Data Management</title><link>/docs/use-cases/reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/use-cases/reports/</guid><description>&lt;p>Cooklang's report system transforms recipes into any format you need through powerful templates and data management. Whether you're creating shopping lists, nutrition labels, recipe cards, or custom exports, the report command combined with the database system provides complete control over your recipe data.&lt;/p>
&lt;h2 id="the-report-system">The Report System&lt;/h2>
&lt;p>The &lt;code>cook report&lt;/code> command uses Jinja2 templates to generate custom outputs from your recipes. This flexibility means you can create anything from simple ingredient lists to complex meal planning documents.&lt;/p></description></item><item><title>Import</title><link>/cli/commands/import/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/import/</guid><description>&lt;p>The &lt;code>import&lt;/code> command fetches recipes from websites and automatically converts them to Cooklang format. It supports hundreds of popular recipe websites and extracts ingredients, instructions, and metadata intelligently.&lt;/p>
&lt;p>Requires &lt;code>OPENAI_API_KEY&lt;/code> environment variable set to perform the conversion to Cooklang. Without the key you still can downlad recipe original content, but it won't be converted to Cooklang.&lt;/p>
&lt;p>Note that you can use &lt;a href="https://cooklang.org/docs/getting-started#build-your-recipe-collection">cook.md converter&lt;/a> if you don't have OpenAI key.&lt;/p>
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook import https://www.bbcgoodfood.com/recipes/chicken-bacon-pasta&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This downloads the recipe and outputs it in Cooklang format into stdout.&lt;/p></description></item><item><title>Doctor</title><link>/cli/commands/doctor/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/doctor/</guid><description>&lt;p>The &lt;code>doctor&lt;/code> command helps maintain a healthy recipe collection by checking for syntax errors, validating references, and ensuring proper organization. Think of it as a health check for your recipes.&lt;/p>
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook doctor&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This runs all available checks on your recipe collection and reports any issues found.&lt;/p>
&lt;h2 id="available-checks">Available Checks&lt;/h2>
&lt;h3 id="recipe-validation">Recipe Validation&lt;/h3>
&lt;p>Check all recipes for syntax errors and warnings:&lt;/p>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook doctor validate&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This command:&lt;/p>
&lt;ul>
&lt;li>Detects syntax errors that prevent parsing&lt;/li>
&lt;li>Reports warnings about potential issues&lt;/li>
&lt;li>Validates recipe references (when one recipe includes another)&lt;/li>
&lt;li>Checks for invalid units or quantities&lt;/li>
&lt;li>Identifies deprecated syntax&lt;/li>
&lt;/ul>
&lt;h3 id="aisle-configuration">Aisle Configuration&lt;/h3>
&lt;p>Check for ingredients missing from your aisle configuration:&lt;/p></description></item><item><title>Seed</title><link>/cli/commands/seed/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/seed/</guid><description>&lt;p>The &lt;code>seed&lt;/code> command populates a directory with example Cooklang recipes. It's perfect for getting started, learning the syntax, or setting up a demo.&lt;/p>
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook seed&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This creates a collection of example recipes in the current directory.&lt;/p>
&lt;h2 id="what-gets-created">What Gets Created&lt;/h2>
&lt;p>The seed command creates:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Example recipes&lt;/strong> – Various cuisines and complexity levels&lt;/li>
&lt;li>&lt;strong>Organized folders&lt;/strong> – Structured by meal type&lt;/li>
&lt;li>&lt;strong>Configuration files&lt;/strong> – Including &lt;code>aisle.conf&lt;/code> for shopping lists&lt;/li>
&lt;li>&lt;strong>README&lt;/strong> – Documentation about the recipes&lt;/li>
&lt;/ul>


&lt;div class="code-toolbar">
 &lt;pre class="language-" data-language="">&lt;code class="language-">.
├── Breakfast/
│ ├── Easy Pancakes.cook
│ └── Mexican Style Burrito.cook
├── Dinners/
│ ├── Neapolitan Pizza.cook
│ ├── Pasta Carbonara.cook
│ └── Roast Chicken.cook
├── Shared/
│ ├── Pizza Dough.cook
│ ├── Tomato Sauce.cook
│ └── Guacamole.cook
├── config/
│ └── aisle.conf
└── README.md&lt;/code>&lt;/pre>
&lt;/div>&lt;h2 id="seeding-options">Seeding Options&lt;/h2>
&lt;h3 id="current-directory">Current Directory&lt;/h3>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook seed
# Creates recipes in current directory&lt;/code>&lt;/pre>
&lt;/div>&lt;h3 id="specific-directory">Specific Directory&lt;/h3>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook seed ~/my-recipes
# Creates recipes in ~/my-recipes

# Or
cook seed recipes/examples
# Creates recipes in recipes/examples&lt;/code>&lt;/pre>
&lt;/div>&lt;h3 id="creating-directory">Creating Directory&lt;/h3>
&lt;p>If the directory doesn't exist, it will be created:&lt;/p></description></item><item><title>Report</title><link>/cli/commands/report/</link><pubDate>Thu, 04 Sep 2025 17:51:42 +0000</pubDate><guid>/cli/commands/report/</guid><description>&lt;p>The &lt;code>report&lt;/code> command generates custom reports from recipes using minijinja templates. It's a powerful tool for creating recipe cards, nutrition labels, meal plans, or any custom format you need.&lt;/p>
&lt;p>⚠️ &lt;strong>Note&lt;/strong>: The report command is currently a prototype feature and will evolve in future versions.&lt;/p>
&lt;h2 id="basic-usage">Basic Usage&lt;/h2>


&lt;div class="code-toolbar">
 &lt;pre class="language-bash" data-language="bash">&lt;code class="language-bash">cook report -t template.jinja recipe.cook&lt;/code>&lt;/pre>
&lt;/div>&lt;p>This processes the recipe through the template and outputs the result.&lt;/p>
&lt;h2 id="how-it-works">How It Works&lt;/h2>
&lt;p>The report command:&lt;/p>
&lt;ol>
&lt;li>Parses the recipe file&lt;/li>
&lt;li>Applies any scaling&lt;/li>
&lt;li>Loads aisle and pantry configurations (if provided)&lt;/li>
&lt;li>Passes recipe data to the Jinja2 template&lt;/li>
&lt;li>Outputs the rendered result&lt;/li>
&lt;/ol>
&lt;h2 id="template-variables">Template Variables&lt;/h2>
&lt;p>Templates receive comprehensive recipe data:&lt;/p></description></item><item><title>David A. Mundie on Cooking and Technology</title><link>/blog/08-david-a-mundie-interview/</link><pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate><guid>/blog/08-david-a-mundie-interview/</guid><description>An interview with David A. Mundie, creator of RxOL - the first programming language for recipes in 1985. He shares his vision of simplifying cooking through technology, his thoughts on recipe formats, and perspectives on the future of kitchen automation.</description></item><item><title>How Nutrients Change During Cooking</title><link>/blog/07-nutrients-during-cooking/</link><pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate><guid>/blog/07-nutrients-during-cooking/</guid><description>Cooking transforms not only the taste and texture of food but also its nutrients, and with tools like Cooklang, we can optimize recipes for both flavor and nutrition.</description></item><item><title>Developing file sync library</title><link>/blog/06-developing-file-sync-library/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>/blog/06-developing-file-sync-library/</guid><description>Alexey on a quest of solving recipe sync problem for Cooklang apps.</description></item><item><title>Understanding Recipes as Stack Machines</title><link>/blog/05-recipes-as-stack-machines/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>/blog/05-recipes-as-stack-machines/</guid><description>Recipes, like programs, are instructions meant to produce consistent results. Thinking of recipes as stack machines is a mental shift that clarifies their structure, highlights opportunities for validation, and opens up new avenues for innovation.</description></item><item><title>Why Recipe Standard is Important</title><link>/blog/04-why-recipe-standard/</link><pubDate>Sat, 09 Nov 2024 21:27:37 +0000</pubDate><guid>/blog/04-why-recipe-standard/</guid><description>A universal recipe standard would transform cooking by providing a shared structure that enables consistency, accessibility, and innovation, much like standardized music notation or programming syntax. Without it, recipes often lose their integrity across kitchens, making cooking needlessly frustrating and unpredictable. While some argue that variability in recipes adds charm, standardization would allow for precise replication, smarter kitchen devices, and a deeper focus on creativity. It’s time to elevate recipes from subjective interpretations to a precise, scalable foundation that benefits everyone—from novice cooks to professional chefs.</description></item><item><title>Generating a recipe graph with ChatGPT</title><link>/blog/03-ai-and-the-evolution-of-recipe-formats/</link><pubDate>Fri, 26 May 2023 19:27:37 +1000</pubDate><guid>/blog/03-ai-and-the-evolution-of-recipe-formats/</guid><description>This text discusses the challenges of translating traditional recipe formats into a structure understandable by computers. It highlights the issues faced by AI in comprehending the sequence of ingredients and cooking steps, and the steps taken to create a new, AI-friendly format. The piece delves into attempts to design a universal tool for recipe importation and conversion, and the issues encountered. It then outlines a new approach using AI to trace ingredients and cooking actions to create a comprehensive recipe graph, leading to an enhanced user experience and potentially revolutionizing the way we engage with recipes.</description></item><item><title>The Recipe Manager Showdown: Cooklang vs. Paprika vs. Mealie</title><link>/blog/09-cooklang-vs-paprika-vs-mealie/</link><pubDate>Sat, 04 Jan 2025 00:00:00 +0000</pubDate><guid>/blog/09-cooklang-vs-paprika-vs-mealie/</guid><description>Comparing three popular recipe management solutions - the minimalist text-based Cooklang, the polished commercial Paprika, and the open-source self-hosted Mealie. Find out which one fits your cooking workflow best.</description></item><item><title>Practical savings on groceries with Cooklang and tools</title><link>/blog/02-practical-savings-on-groceries-with-cooklang/</link><pubDate>Thu, 20 May 2021 19:27:37 +1000</pubDate><guid>/blog/02-practical-savings-on-groceries-with-cooklang/</guid><description>This is a list of ideas we think will help you to save time and money on groceries with Cooklang and tools.</description></item><item><title>My approach to automating grocery shopping</title><link>/blog/01-my-approach-to-automating-grocery-shopping/</link><pubDate>Thu, 20 May 2021 19:27:37 +1000</pubDate><guid>/blog/01-my-approach-to-automating-grocery-shopping/</guid><description>How and why I created Cooklang in the first place.</description></item><item><title>About</title><link>/about/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>/about/</guid><description>&lt;h1 id="my-story--crafting-cooklang">My Story — Crafting Cooklang&lt;/h1>
&lt;p>During the pandemic, online grocery shopping revealed an unexpected frustration: without wandering through aisles, I either forgot essentials or ended up with a dozen items I didn't need. After juggling sticky-note meal plans that looked curiously repetitive, I thought: &amp;quot;It's time to automate this... and never re-solve it.&amp;quot;&lt;/p>
&lt;p>So I began writing recipes in plain text—tagging ingredients with &lt;code>@&lt;/code>:&lt;/p>


&lt;div class="code-toolbar">
 &lt;pre class="language-cooklang" data-language="cooklang">&lt;code class="language-cooklang">Poke holes in @potato{2}. 
Add @salt and @ground black pepper{} to taste.&lt;/code>&lt;/pre>
&lt;/div>&lt;p>That simple markup—both human-friendly and machine-readable—became the heart of Cooklang.&lt;/p></description></item><item><title>Post 3</title><link>/posts/post-3/</link><pubDate>Wed, 15 Mar 2023 11:00:00 -0700</pubDate><guid>/posts/post-3/</guid><description>&lt;p>Occaecat aliqua consequat laborum ut ex aute aliqua culpa quis irure esse magna dolore quis. Proident fugiat labore eu laboris officia Lorem enim. Ipsum occaecat cillum ut tempor id sint aliqua incididunt nisi incididunt reprehenderit. Voluptate ad minim sint est aute aliquip esse occaecat tempor officia qui sunt. Aute ex ipsum id ut in est velit est laborum incididunt. Aliqua qui id do esse sunt eiusmod id deserunt eu nostrud aute sit ipsum. Deserunt esse cillum Lorem non magna adipisicing mollit amet consequat.&lt;/p></description></item><item><title>Post 2</title><link>/posts/post-2/</link><pubDate>Wed, 15 Feb 2023 10:00:00 -0700</pubDate><guid>/posts/post-2/</guid><description>&lt;p>Anim eiusmod irure incididunt sint cupidatat. Incididunt irure irure irure nisi ipsum do ut quis fugiat consectetur proident cupidatat incididunt cillum. Dolore voluptate occaecat qui mollit laborum ullamco et. Ipsum laboris officia anim laboris culpa eiusmod ex magna ex cupidatat anim ipsum aute. Mollit aliquip occaecat qui sunt velit ut cupidatat reprehenderit enim sunt laborum. Velit veniam in officia nulla adipisicing ut duis officia.&lt;/p>
&lt;p>Exercitation voluptate irure in irure tempor mollit Lorem nostrud ad officia. Velit id fugiat occaecat do tempor. Sit officia Lorem aliquip eu deserunt consectetur. Aute proident deserunt in nulla aliquip dolore ipsum Lorem ut cupidatat consectetur sit sint laborum. Esse cupidatat sit sint sunt tempor exercitation deserunt. Labore dolor duis laborum est do nisi ut veniam dolor et nostrud nostrud.&lt;/p></description></item><item><title>Post 1</title><link>/posts/post-1/</link><pubDate>Sun, 15 Jan 2023 09:00:00 -0700</pubDate><guid>/posts/post-1/</guid><description>&lt;p>Tempor proident minim aliquip reprehenderit dolor et ad anim Lorem duis sint eiusmod. Labore ut ea duis dolor. Incididunt consectetur proident qui occaecat incididunt do nisi Lorem. Tempor do laborum elit laboris excepteur eiusmod do. Eiusmod nisi excepteur ut amet pariatur adipisicing Lorem.&lt;/p>
&lt;p>Occaecat nulla excepteur dolore excepteur duis eiusmod ullamco officia anim in voluptate ea occaecat officia. Cillum sint esse velit ea officia minim fugiat. Elit ea esse id aliquip pariatur cupidatat id duis minim incididunt ea ea. Anim ut duis sunt nisi. Culpa cillum sit voluptate voluptate eiusmod dolor. Enim nisi Lorem ipsum irure est excepteur voluptate eu in enim nisi. Nostrud ipsum Lorem anim sint labore consequat do.&lt;/p></description></item></channel></rss>